<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>org.jboss</groupId>
		<artifactId>jboss-parent</artifactId>
		<version>10</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jboss.teiid.quickstart</groupId>
	<artifactId>teiid-quickstart-parent</artifactId>
	<packaging>pom</packaging>
	<version>1.1.0</version>
	<name>Teiid Quickstart Parent</name>
	<description>Quickstarts for the Teiid project</description>

	<url>http://jboss.org/teiid</url>
	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/copyleft/lesser.html</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<modules>
        <module>drools-integration</module>
        <module>dynamicvdb-datafederation</module>
        <module>dynamicvdb-dataroles</module>
        <module>hibernate-on-top-of-teiid</module>
        <module>webservices-as-a-datasource</module>
		<module>infinispan-local-cache</module>
        <module>custom-metadata-repository</module>
	</modules>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<version.teiid>8.4.0.Final</version.teiid>
		<version.jboss.as>7.2.0.Final</version.jboss.as>
		<version.jboss.javaee.web>2.0.0.Final</version.jboss.javaee.web>
		<version.infinispan>5.1.4.FINAL</version.infinispan>
		<version.hibernate.search>4.1.1.Final</version.hibernate.search>
		<version.javax.annotation>1.0.1.Final</version.javax.annotation>
		<version.javax.spec>1.0.2.Final</version.javax.spec>
		<version.javax.enterprise>1.1-20120918</version.javax.enterprise>
		<version.jboss.logging>3.1.2.GA</version.jboss.logging>
		<version.jboss.as.plugin>7.4.Final</version.jboss.as.plugin>
        
        <version.ant>1.7.0</version.ant>
		
		<version.junit>4.10</version.junit>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>		
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can read this 
				as the JBoss stack of the Java EE 6 Web Profile APIs), and we use version 
				2.0.0.Final which is the latest release of the stack. You can actually use 
				this stack with any version of JBoss AS that implements Java EE 6, not just 
				JBoss AS 7! -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-web-6.0</artifactId>
				<version>${version.jboss.javaee.web}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-parent</artifactId>
				<version>${version.teiid}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-api</artifactId>
				<version>${version.teiid}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-client</artifactId>
				<version>${version.teiid}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.teiid.connectors</groupId>
				<artifactId>translator-object</artifactId>
				<version>${version.teiid}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.teiid.connectors</groupId>
				<artifactId>connector-infinispan</artifactId>
				<version>${version.teiid}</version>
				<classifier>lib</classifier>
			</dependency>

			<dependency>
				<groupId>org.jboss.teiid.connectors</groupId>
				<artifactId>connector-infinispan</artifactId>
				<version>${version.teiid}</version>
				<type>rar</type>
			</dependency>

			<!-- Infinispan dependencies -->
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-core</artifactId>
				<version>${version.infinispan}</version>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-cdi</artifactId>
				<version>${version.infinispan}</version>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-query</artifactId>
				<version>${version.infinispan}</version>
			</dependency>

			<!-- Import the Common Annotations API (JSR-250), we use provided scope 
				as the API is included in JBoss AS 7 -->
			<dependency>
				<groupId>org.jboss.spec.javax.annotation</groupId>
				<artifactId>jboss-annotations-api_1.1_spec</artifactId>
				<version>${version.javax.annotation}</version>
			</dependency>

			<!-- Import the Servlet API, we use provided scope as the API is included 
				in JBoss AS 7 -->
			<dependency>
				<groupId>org.jboss.spec.javax.servlet</groupId>
				<artifactId>jboss-servlet-api_3.0_spec</artifactId>
				<version>${version.javax.spec}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.spec.javax.ejb</groupId>
				<artifactId>jboss-ejb-api_3.1_spec</artifactId>
				<version>${version.javax.spec}</version>
			</dependency>

			<dependency>
				<groupId>javax.resource</groupId>
				<artifactId>connector-api</artifactId>
				<version>1.5</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.logging</groupId>
				<artifactId>jboss-logging</artifactId>
				<version>${version.jboss.logging}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-search</artifactId>
				<version>${version.hibernate.search}</version>
			</dependency>
		</dependencies>

	</dependencyManagement>
    <build>
        <plugins>
	  <!-- Specify the compiler options and settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.surefire.plugin}</version>
				<configuration>
					<includes>
						<include>**/*TestCase.java</include>
						<include>**/*Test.java</include>
						<include>**/Test*.java</include>
					</includes>
					<excludes>
						<exclude>**/Abstract*TestCase.java</exclude>
			<!-- hack to prevent anonymous inner classes in Tests from being run as tests -->
						<include>**/Test*$*.java</include>
					</excludes>
					<systemPropertyVariables>
						<user.dir>${basedir}/target</user.dir>
						<java.io.tmpdir>${basedir}/target</java.io.tmpdir>
					</systemPropertyVariables>
				</configuration>
			</plugin>
      <!-- 
      Build a test-jar for each project, so that src/test/* resources and classes can be used
      in other projects.  Also customize how the jar files are assembled.
      -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<addDefaultSpecificationEntries> true</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries> true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-URL>${project.url}</Implementation-URL>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${version.source.plugin}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>


</project>
